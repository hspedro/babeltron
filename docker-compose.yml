name: babeltron
services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api
    ports:
      - "8000:8000"
    volumes:
      - ./models:/models
    environment:
      - MODEL_PATH=/models
      - METRICS_ENABLED=true
      - OTLP_MODE=otlp-grpc
      - OTEL_SERVICE_NAME=babeltron
      - OTLP_COLLECTOR_HOST=otel-collector
      - OTLP_COLLECTOR_PORT=4317
      - API_PASSWORD=translation2025
      - WORKER_COUNT=2
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - otel-collector

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    depends_on:
      - api

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "6831:6831/udp"   # Jaeger thrift compact (agent)
      - "6832:6832/udp"   # Jaeger thrift binary (agent)
      - "5778:5778"       # Agent configs
      - "16686:16686"     # Jaeger UI
      - "14250:14250"     # Model/collector gRPC
      - "14268:14268"     # Jaeger HTTP (collector)
      - "14269:14269"     # Admin port
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - SAMPLING_STRATEGIES_FILE=/etc/jaeger/sampling.json
      - LOG_LEVEL=debug
    volumes:
      - ./etc/jaeger-sampling.json:/etc/jaeger/sampling.json
    restart: unless-stopped

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./etc/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # Health check extension
    restart: unless-stopped
    depends_on:
      - jaeger

volumes:
  grafana-storage:
