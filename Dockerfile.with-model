# Build stage
FROM python:3.10-slim AS builder

WORKDIR /app

# Install a specific version of Poetry that supports --no-dev
RUN pip install poetry==2.1.1

# Copy project files
COPY pyproject.toml poetry.lock* README.md ./
COPY babeltron ./babeltron

# Configure poetry to not use a virtual environment
RUN poetry config virtualenvs.create false \
    && poetry install --without dev --no-interaction --no-ansi

# Model download stage
FROM python:3.10-slim AS model-downloader

WORKDIR /models

# Install dependencies for model download
RUN apt-get update && apt-get install -y \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Download the small model (change URL for medium or large model if needed)
# Small model: 418M parameters, ~1GB disk space
RUN wget -q https://huggingface.co/facebook/m2m100_418M/resolve/main/pytorch_model.bin -O pytorch_model.bin \
    && wget -q https://huggingface.co/facebook/m2m100_418M/resolve/main/config.json -O config.json \
    && wget -q https://huggingface.co/facebook/m2m100_418M/resolve/main/sentencepiece.bpe.model -O sentencepiece.bpe.model \
    && wget -q https://huggingface.co/facebook/m2m100_418M/resolve/main/tokenizer_config.json -O tokenizer_config.json \
    && wget -q https://huggingface.co/facebook/m2m100_418M/resolve/main/tokenizer.json -O tokenizer.json \
    && wget -q https://huggingface.co/facebook/m2m100_418M/resolve/main/vocab.json -O vocab.json

# Final stage
FROM python:3.10-slim

WORKDIR /app

# Copy Python dependencies from builder stage
COPY --from=builder /usr/local/lib/python3.10/site-packages /usr/local/lib/python3.10/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Copy application code
COPY --from=builder /app/babeltron ./babeltron

# Copy the downloaded model
COPY --from=model-downloader /models /models

# Copy and set permissions on the entrypoint script BEFORE changing user
COPY docker-entrypoint.sh /app/docker-entrypoint.sh
RUN chmod +x /app/docker-entrypoint.sh

ENV PYTHONPATH=/app
ENV MODEL_PATH=/models

# Create a non-root user and switch to it
RUN useradd -m appuser
USER appuser

EXPOSE 8000

ENTRYPOINT ["/app/docker-entrypoint.sh"]
